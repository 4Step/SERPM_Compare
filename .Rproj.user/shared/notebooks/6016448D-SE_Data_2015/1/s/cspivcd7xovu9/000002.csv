"0","# compute growth rates"
"0","data_counties <- rbind(maz_2010, maz_2015, maz_2040) %>%"
"0","            mutate( college = collegeEnroll + otherCollegeEnroll,"
"0","                    school = EnrollGrade9to12 + EnrollGradeKto8 + PrivateEnrollGradeKto8) %>%"
"0","            select (year, mgra, TAZ, hh, pop, emp_total, college, school) %>%"
"0","            left_join(tazCounty, by = ""TAZ"") %>% "
"0","            group_by(year, COUNTY) %>%"
"0","            select(-TAZ, -mgra) %>%"
"0","            summarize_each(funs(sum)) %>%"
"0","            gather(var, val, -year, -COUNTY) %>%"
"0","            spread(year, val) %>%"
"0","            mutate(pct2010 =  (1 - (`2010` / `2010`)),"
"0","                   pct2015 =  (1 - (`2010` / `2015`)),"
"0","                   pct2040 =  (1 - (`2010` / `2040`)),"
"0","                   county = case_when( .$COUNTY == 1 ~ ""Palm Beach"","
"0","                                    .$COUNTY == 2 ~ ""Broward"","
"0","                                    .$COUNTY ==3 ~ ""Miami-Dade"")"
"0","                   ) %>%"
"0","            mutate_each(funs(replace(.,is.na(.),0))) %>%"
"0","            rename(remCounty = COUNTY, COUNTY = county) %>%"
"0","            select( -remCounty)"
"2","`summarise_each()` is deprecated.
Use `summarise_all()`, `summarise_at()` or `summarise_if()` instead.
To map `funs` over all variables, use `summarise_all()`
"
"2","`mutate_each()` is deprecated.
Use `mutate_all()`, `mutate_at()` or `mutate_if()` instead.
To map `funs` over all variables, use `mutate_all()`
"
"0","#kable(data_counties, digits = 2, format.args = list(big.mark ="",""))  "
"0","datatable(data_counties, caption = ""Growth Rate by Counties"", rownames = ~COUNTY) %>%"
"0","  formatPercentage(c(""pct2010"",""pct2015"", ""pct2040""), 2)  "
